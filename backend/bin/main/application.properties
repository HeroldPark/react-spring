#
# java -jar build/libs/react-spring-1.0.0.jar --spring.profiles.active=dev
#

spring.project.folderPath=./backend/folder

# server address
# server.address=10.160.130.148
# server port
server.port=8989

# Localhost DB
spring.datasource.hikari.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy
spring.datasource.hikari.jdbc-url=jdbc:log4jdbc:mariadb://localhost:3306/react-spring?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
spring.datasource.hikari.username=root
spring.datasource.hikari.password=maria123
# spring.datasource.hikari.connection-test-query=SELECT NOW() FROM dual

# spring.datasource.url=jdbc:log4jdbc:mariadb://localhost:3306/react-spring?serverTimezone=Asia/Seoul&useUnicode=true&characterEncoding=utf8&useSSL=false&allowPublicKeyRetrieval=true
# spring.datasource.username=root
# spring.datasource.password=maria123
# spring.datasource.driver-class-name=net.sf.log4jdbc.sql.jdbcapi.DriverSpy


# column name to camel case
# mybatis.configuration.map-underscore-to-camel-case=true

# mybatis-config.xml location and mapper file location : src/main/java/com/deltax/config/DatabaseConfig.java에 설정
# mybatis.config-location=classpath:/mybatis/mybatis-config.xml
# mybatis.mapper-locations:classpath:/mybatis/mappers/*.xml

# # change upload file size
# spring.servlet.multipart.maxFileSize=10MB
# spring.servlet.multipart.maxRequestSize=50MB

# # com.deltax.domain.code.CommonCodeController
# property.app.uploadPath=C:/log/upload

# # resources location - 외부 파일 경로 설정 추가
# spring.web.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/

#JPA 설정
#Dialect 설정
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect

#하이버네이트가 실행하는 모든 SQL문을 콘솔로 출력해 준다.
spring.jpa.properties.hibernate.show_sql=true

#콘솔에 출력되는 JPA 실행 쿼리를 가독성있게 표현한다.
spring.jpa.properties.hibernate.format_sql=true

#디버깅이 용이하도록 SQL문 이외에 추가적인 정보를 출력해 준다.
spring.jpa.properties.hibernate.use_sql_comments=true

logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.level.org.hibernate.type.descriptor.sql=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.shane.blog=DEBUG

# JWT (JSON WEB TOKEN)
# spring.jwt.header=Authorization
# spring.jwt.prefix=Bearer 
# spring.jwt.secret=eyJhbGciOiJIUzUxMiJ9eyJzdWIiOiJ1c2VyIn0I2qOfhAZMGSH1pCecUH5sV2Lg2pSWNQMPzXsMcne6NJ1SlkBoirhGAmKfTYNcRyhu6nQtRzgAd6VXyttoX9A
# spring.jwt.tokenExpirationTime=18000
jwt.header=Authorization
jwt.prefix=Bearer 
jwt.secret=eyJhbGciOiJIUzUxMiJ9eyJzdWIiOiJ1c2VyIn0I2qOfhAZMGSH1pCecUH5sV2Lg2pSWNQMPzXsMcne6NJ1SlkBoirhGAmKfTYNcRyhu6nQtRzgAd6VXyttoX9A
jwt.tokenExpirationTime=18000

